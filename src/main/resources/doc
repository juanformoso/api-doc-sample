{
"general":{
	"projectName":"My project API",
	"projectSummary":"<p>This is your project summary. You can explain general stuff about it.<br />See an example here: <a href='http://api.despegar.com'>http://api.despegar.com</a></p><p>You can also have links to <a href='##BASE_URL##/docs/page/custom'>custom pages</a>!</p>",
	"methodSummary":"<p>This is a summary description of your methods. it accepts full html text, so be careful what you do, as it will be rendered as is.<br />You could use this section to specify general information about your methods such as, for example, that they accept vectorized parameters.</p>",
	"twitterUsername":"juanformoso",
	"relativePath":"",
	"resourcesPath" : "/"
},
"methods":[{
	"getSimple":{
		"response": [
			{ "name" : "dummy-key", "description":"Just some dummy data" }
		]
	},
	"getPaginableAndSortable":{
		"group":"Miscellaneous",
		"subGroup":"Subgroup 1",
		"description":"Shows a paginable and sortable method",
		"friendlyName":"paginable",
		"order":1,
		"requestMapping":"/paginable",
		"request": {
			"paginable":true,
			"sortable": {
				"possibleValues": ["id", "description"]
			}
		},
		"responseIsList":true,
		"response": [
			{ "name" : "id" },
			{ "name" :"description", "description":"The awesome description" }
		]
	},
	"getWithId":{
		"group":"Miscellaneous",
		"subGroup":"Subgroup 1",
		"description":"Method that takes one or more ids",
		"longDescription":"If you fill in the long description, the short one shown in the index is overridden",
		"friendlyName":"with ids",
		"order":2,
		"requestMapping":"/with-id/{ids}",
		"request": {
			"parameters": [
				{ "name" :"ids", "description": "A single primary key identifier or a vectorized, comma-delimited list of identifiers", "vectorized": true }
			]
		},
		"responseIsList":true,
		"response": [
			{ "name" : "your-key", "description":"Your key in the response data" }
		]
	},
	"getDynamicResponse":{
		"group":"Miscellaneous",
		"subGroup":"Subgroup 2",
		"description":"Shows dynamic responses",
		"longDescription":"Shows how to specify responses that vary according to some variable.<br />The example shows a fictitious response with made up objects called <i>city</i> and <i>airport</i>",
		"friendlyName":"dynamic response",
		"order":0,
		"requestMapping":"/dynamic/{type}",
		"request": {
			"parameters": [
				{ "name" :"type", "description": "Object to get, either city or airport"}
			]
		},
		"dynamicResponse": [{
			"name":"For type 'city'",
			"response": [
				{ "name" :"id", "description":"The object id"},
				{ "name" :"type", "description":"Whether the object is an <i>airport</i> or a <i>city</i>"},
				{ "name" :"name", "description":"The object name"},
				{ "name" :"countryId", "description":"2 digit country id where this city belongs"},
				{ "name" :"geoLocation", "description":"Geolocation of this object",
					"children" : [
						{ "name" :"latitude", "description":"The latitude"},
						{ "name" :"longitude", "description":"The longitude"}
					]
				},
				{ "name" :"hasAirport", "description":"Indicates if this city has airports in it"}
			]
		},{
			"name":"For type 'airport'",
			"response": [
				{ "name" :"id", "description":"The object id"},
				{ "name" :"type", "description":"Whether the object is an <i>airport</i> or a <i>city</i>"},
				{ "name" :"name", "description":"The object name"},
				{ "name" :"cityId", "description":"3 digit city id where this airport belongs"},
				{ "name" :"countryId", "description":"2 digit country id where this airport belongs"},
				{ "name" :"geoLocation", "description":"Geolocation of this object",
					"children" : [
						{ "name" :"latitude", "description":"The latitude"},
						{ "name" :"longitude", "description":"The longitude"}
					]
				}	
			]
		}]
	},
	"longDescriptionNotImplemented" : {
		"group" : "Extended",
		"friendlyName" : "longDescNotImpl",
		"order" : 0,
		"description" : "The method simple description.",
		"longDescription" : "The method long description.",
		"implemented" : false,
		"requestMapping" : "/longDescriptionNotImplemented",
		"request" : {
			"parameters" : [] 
		},
		"response" : []
	},
	"filterOptions" : {
		"group" : "Extended",
		"friendlyName" : "filterOptions",
		"order" : 0,
		"description" : "Method with filters, facets and options.",
		"requestMapping" : "/filterOptions",
		"request" : {
			"parameters" : [ { "name" : "param1", "description" : "First param." } ],
			"filters" : [ { "name" : "filter1", "description" : "First filter." } ],
			"options" : [ 
						  { "name" : "option1", "description" : "First option." },
						  { "name" : "option2", "description" : "Second option.", "type" : "Integer", "longDescription" : "Option long description", "defaultValue" : "0" } 
						]
		},
		"response" : []
	},
	"facetsWithDescription" : {
		"group" : "Extended",
		"friendlyName" : "facetsWithDescription",
		"order" : 0,
		"description" : "Method with facets and facets description.",
		"requestMapping" : "/facetsWithDesc",
		"facets" : true,
		"request" : {
			"facets" : [ { "name" : "facet1" },
						 { "name" : "facet2", "description" : "Facet 2 description", "type" : "Integer" } ]
		}
	},
	"paginableAndSortable" : {
		"group" : "Extended",
		"friendlyName" : "paginableAndSortable",
		"order" : 0,
		"description" : "Method that has paginable and sortable attributes",
		"requestMapping" : "/paginableAndSortable",
		"shortName" : "/pages",
		"request" : {
			"parameters" : [ { "name" : "param1", "description" : "Description 1" } ],
			"paginable" : true,
			"sortable" : { "possibleValues" : [ "SORT_1" , "SORT_2", "SORT_3" ] }
		}
	},
	"dictionaryDescription" : {
		"group" : "Extended",
		"friendlyName" : "dictionaryDescription",
		"order" : 0,
		"description" : "Method that uses the dictionary standard descriptions.",
		"requestMapping" : "/dictionaryDescription",
		"request" : {
			"parameters" : [ { "name" : "param1", "descriptionKey" : "desc1" } ],
			"filters" : [ { "name" : "desc2" } ],
			"options" : [ { "name" : "desc3" , "descriptionKey" : "desc3", "description" : "Description that is shown instead of 'desc3'." } ]
		}
	},
	"parametersExpanded" : {
		"group" : "Extended",
		"friendlyName" : "parametersExt",
		"order" : 0,
		"description" : "Method with full use of parameters options.",
		"requestMapping" : "/parametersExt",
		"request" : {
			"parameters" : [
				{ "name" : "listParam", "description" : "Parameter that is a list", "isList" : true },
				{ "name" : "optionalParam", "description" : "Parameter that is optional", "optional" : true, "type" : "boolean" },
				{ "name" : "grandChildren", "description" : "Parameter with grandchildren", "isPhony" : true,
					"children" : [
						{ "name" : "child", "description" : "First child", "isList" : true, "optional" : true },
						{ "name" : "dad" , "description" : "Dad field",
							"children" : [ { "name" : "grandson" } ]
						}
					]
				}
			]
		}
	},
	"multipleMappings" : {
		"group" : "Extended",
		"friendlyName" : "multipleMappings",
		"order" : 1,
		"description" : "Method with more than one mapping, examples and dynamic dates.",
		"method" : { "get" : "/multipleMappings/get", "post" : "/multipleMappings/post" },
		"preferredMethod" : "get",
		"request" : {
			"parameters" : [
				{ "name" : "param1" , "description" : "First parameter." },
				{ "name" : "date" , "description" : "Date.", "type" : "Date" }
			]
		},
		"examples" : [
			{ "title" : "Same date", "getParams" : { "param1" : "1990-1-1" , "date" : "1990-1-1" }, 
				"postFile" : "multiple_a.json" },
			{ "title" : "Today", "getParams" : { "param1" : "1990-1-1 %d%now" , "date" : "1990-1-1 %$d%now %f yyyy-MM-dd f%" },
				"postFile" : "multiple_b.json" },
			{ "title" : "Plus two days", "getParams" : { "param1" : "1990-1-1 %d+2d" , "date" : "1990-1-1 %$d+2d %f yyyy-MM-dd f%" } ,
				"postFile" : "multiple_c.json" },
			{ "title" : "Minus one day", "getParams" : { "param1" : "1990-1-1 %d-1d" , "date" : "1990-1-1 %$d-1d %f yyyy-MM-dd f%" },
				"postFile" : "multiple_d.json"  },
			{ "getParams" : { "param1" : "1990-1-1 %d+1m-1d+10y" , "date" : "1990-1-1 %$d+1m-1d+10y %f yyyy-MM-dd f%" },
				"postFile" : "multiple_e.json"  }
		]
	},
	"betaMethod" : {
		"group" : "Tagged",
		"friendlyName" : "betaMethod",
		"order" : 1,
		"description" : "A method in beta version",
		"tags" : [ "Beta", "Private" ],
		"method" : { "get" : "/betaMethod" },
		"request" : { "parameters" : [ { "name" : "param" } ] },
		"examples" : [ { "getParams" : { "param" : "x" } }]
	},
	"depricatedMethod" : {
		"group" : "Tagged",
		"friendlyName" : "depricatedMethod",
		"order" : 1,
		"description" : "A method that is marked as depricated",
		"tags" : [ "Depricated" ],
		"method" : { "get" : "/depricatedMethod" },
		"request" : { }
	},
	"deleteMethod" : {
		"group" : "Extended",
		"friendlyName" : "deleteMethod",
		"description" : "A delete method.",
		"order" : 1,
		"method" : { "delete" : "/deleteMethod" },
		"request" : {
			"parameters" : [
				{ "name" : "param1" , "description" : "Parametro 1." }	
			]
		},
	},
	"postMethod" : {
		"group" : "Extended",
		"friendlyName" : "postMethod",
		"description" : "A post only method.",
		"order" : 1,
		"method" : { "post" : "/postMethod" },
		"request" : { }
	},
	"postPutMethod" : {
		"group" : "Extended",
		"friendlyName" : "postPutMethod",
		"description" : "A post and put method with examples.",
		"order" : 1,
		"method" : { "post" : "/postPutMethod", "put" : "/postPutMethod" },
		"request" : {
			"parameters" : [
				{ "name" : "param", "description" : "The parameter" } 
			] 
		},
		"examples" : [
			{ "postFile" : "postPut_post_a.json", "putFile" : "postPut_put_a.json" },
			{ "postFile" : "postPut_post_b.json", "putFile" : "postPut_put_b.json" }
		]
	}
	}],
	"dictionary" :[ 
	   {"key":"id","description":"The Object Id"},
	   {"key":"type","description":"Whether the object is an <i>airport</i> or a <i>city</i>"},
	   {"key":"desc1", "description" : "Description obtained by descriptionKey."},
	   {"key":"desc2", "description" : "Description obtained by name."},
	   {"key":"desc3", "description" : "Description not shown, because 'description' field is shown."}
	],
	"tags" : [
         {
       	 "name" : "Beta",
       	 "color" : "#66FF66",
       	 "title"  : "This service is in beta and, as such, the returned fields could change"
         }, 
         {
       	 "name" : "Deprecated",
       	 "color" : "#FF3333",
       	 "title"  : "This service is deprecated and, as such, maintenance is no longer assured. Check documentation to see which new service to use"
         },
         {
       	 "name" : "Private",
       	 "color" : "#3366FF",
       	 "title" : "This service is only accesible to some ApiKeys and cannot be used with the online console."
         }
	]
}